[{"title":"How Google Works-读后感","date":"2018-12-08T07:33:49.000Z","path":"2018/12/08/How-google-works/","text":"聚焦用户、创意精英、技术洞见 金句 1、通用电气公司前首席执行官杰克·韦尔奇在《赢》一书中写道： 如果你不能时常传达你的目标，不能通过奖励巩固你的目标，那么，你的愿景还不如打印愿景的纸有价值。 2、苹果前人力资源主管黛比·碧昂多利洛： 你的头衔可以让你成为管理者，但是让你成为领导者的，是你的员工。 3、大型企业成功的方式： 1）使用创新的方式解决问题 2）利用这个解决方式快速成长与扩张 3）成功很大程度上是以产品为基础 4、我没有什么特殊天赋，只是抱有狂热的好奇心 —爱因斯坦","tags":[]},{"title":"程序员的自我修养-读后感","date":"2018-10-15T11:11:21.000Z","path":"2018/10/15/Programmer-s-self-cultivation/","text":"程序员的10点启示 1、尽早确定你想做的事情尽早确定你想做的事情，减少走弯路，往往程序员工作数年后，转行的成本会非常高，虽然有个别成功的案例，但这也只是极少数，制定你的职业目标，并持续努力地接近并达到这个目标。 2、比一般人更加努力 10 000小时定律 优秀的程序员往往会被带上天才、高智商的标签，但是这些优秀的人往往在你看不到的时候，会花更多的时间去工作或者学习，当你也坚持这么做的时候，你也会变得一样优秀。 一万小时定律是作家格拉德威尔在《异类 不一样的成功启示录》一书中指出的定律。“人们眼中的天才之所以卓越非凡，并非天资超人一等，而是付出了持续不断的努力。1万小时的锤炼是任何人从平凡变成世界级大师的必要条件。”他将此称为“一万小时定律”。要成为某个领域的专家，需要10000小时，按比例计算就是：如果每天工作八个小时，一周工作五天，那么成为一个领域的专家至少需要五年。这就是一万小时定律。 3、提高工作效率 加快工作节奏 使用已有的轮子 在工作中，常见两种人，在分配同等的工作量给他们时，一种人会拖到很晚，时长会加班再做完，另一个种人，每天工作8小时整点下班。两人都会按期限完成工作，那么这两种人哪一种会受到领导的青睐，或许前者在领导眼里会是一个好员工，但是后者的潜力更大，值得培养。 4、有效的沟通方式解决这些问题的根本方法，就是进行有效的沟通，确认对方明白了你的意思，然后确认对方是答应你了，还是拒绝你了，不论什么结果，你总要有结论，到此，通信才算结束。 既然沟通要以对方了解你的意思为目的，那么在表达自己的意思时，就需要在你和对方共同认知的基础上讨论那些问题，或者说，要用对方能听得懂，马上理解的语言进行讨论。 与人有效沟通，重点不在于证明自己正确，而在于达到沟通的目的。很多人善于辩论，当时似乎讲得对方无话可说，甚至接受了他们的观点，但是事后别人一想，觉得好像被忽悠了，反而产生了很大的逆反心理。这种看似成功的沟通，其实是彻底的失败。很多时候有的人觉得，明明当时已经说服了对方，怎么没过多久对方就改变主意了。其实，根本不是对方改变主意了，而是他们从来就没有被说服过。在说服别人方面，花言巧语和雄辩的口才，永远比不过确定的事实。 5、PKSS与持续学习大多数公司在年终对员工进行考评时，都是以结果为导向，量化数据，并加以横向比对。怎样提高自己的竞争力？ PKSS（PK saturday and Sunday）爱因斯坦曾说过：人的差别在于业余时间都做了什么。现今社会企业选人要求T型人才，也就是说要求你有一技之长，而且在其他能力也要突出。具美国新华社统计报道：未来的程序员只会一种编程语言是不够的。 6、学会控制情绪大多数人都能比较理性地完成工作，但有时情绪控制能力有所欠缺，具体表现包括主观、随性、情绪变化大，这往往会对个人的职业发展造成损害，甚至是灾难。如何控制好情绪：1、思考发脾气可不可以解决当前的问题，如果不能那就不要。2、站在对方的角度和立场看待问题，就是我们常说的换位思考。3、要主动说对不起 成功人士往往能够控制好自己的情绪，会与身边的人保持良好的关系 7、和优秀的人工作，让身边的人更优秀一个优秀的产品背后，肯定会有一个优秀的团队，而不是优秀的个体，如何成为一个优秀的人？ 当你步入职场、会遇到形形色色的人，能力有高有低。优秀的人身上往往会有你值得学习的地方。比如你们团队的leader、团队中资深的程序员，要勇于把自己的缺点不足暴露出来，让更优秀的人帮助你成长。 8、善于归纳与表达一般给程序员这个职业的标签是技术宅、内心、不乐于沟通。随着自身技能和工作经验的提升，你在公司中很可能会被赋予更多的管理职责，或者担任项目的owner。这时归纳和表达能力将显的非常重要。如何提升表达能力 在需求会、或者私下技术沟通要敢于发言，阐述自己的观点，不要怕说错。给自己创造机会去练习，比如主持周会或者做一次团队的分享会。 在团队或部门建立自己的权威，选择合适的时机去表现自己，这能让其他人看到你的不同之处，在公司、团队内部建立良好的影响力。这里有一个前提，就是你已经积累了足够的实力，做好了充足的准备，并在机会来的时候抓住它。 9、掌握英语掌握好英语能够帮祝你获得更宽广的视野，带来更多的机会，英语作为一项必备技能是非常重要的。 10、生活 睡眠 旅行生活：尝试有节制有规律的生活，程序员生涯绝不是一次冲刺跑，而是一场马拉松。不要忽视你的家庭。睡眠：长时间睡眠不充足，会让人的产生焦虑。充足的睡眠往往能使你更有效率地投入到新一天的工作中。旅行：读万卷书不如行万里路。","tags":[]},{"title":"事件捕获与事件冒泡","date":"2017-02-09T03:44:35.000Z","path":"2017/02/09/2017-02-09/","text":"前言这里首先要先讲一下什么是事件、事件流：事件：浏览器执行的动作，如click、load等。事件流：事件发生时会在元素节点与根节点之间按照特定的顺序传播，路径所经过的所有节点都会收到该事件，这个传播过程即DOM事件流。 正文123&lt;div id=\"outer\"&gt; &lt;div id=\"inner\"&gt;Click me!&lt;/div&gt;&lt;/div&gt; 上面代码中，如果两个元素都绑定了click事件，当点击后函数会怎样触发呢？ 为了解决这个问题微软和网景提出了两种几乎完全相反的概念，事件冒泡、事件捕获。 事件冒泡：事件会从最内层的元素开始发生，一直向上传播，直到document对象。div -&gt; body -&gt; html -&gt; document 事件捕获：事件冒泡相反，事件会从最外层开始发生，直到最具体的元素。document -&gt; html -&gt; body -&gt; div addEventListener为了更清楚的理解事件捕获与事件冒泡，进一步了解addEventListener方法。addEventListener方法用来为一个特定的元素绑定一个事件处理函数，是JavaScript中的常用方法。addEventListener有三个参数：1element.addEventListener(event, function, useCapture) event：字符串，指定事件名，如click、blur等。function：指定事件触发时执行的函数。useCapture: 可选，Boolean，指定事件是否在捕获或冒泡阶段执行，true-事件句柄在捕获阶段执行，false-默认，事件句柄在冒泡阶段执行。 测试1234567891011this.$outerDiv = document.getElementById('outerDiv');this.$innerDiv = document.getElementById('innerDiv');this.$outerDiv.addEventListener('click', () =&gt; &#123; alert('I am outer div');&#125;, true);this.$innerDiv.addEventListener('click', () =&gt; &#123; alert('I am inner div');&#125;, true);&lt;div id=\"outer\"&gt; &lt;div id=\"inner\"&gt;Click me!&lt;/div&gt;&lt;/div&gt; useCapture为true，事件句柄在捕获阶段执行，所以alert顺序为 I am outer div , I am inner div。如果useCapture为false，事件句柄在冒泡阶段执行，顺序与上方相反。实践操作 如果想终止捕获或冒泡。添加event.stopPropagation()方法。","tags":[]},{"title":"细节注意（二） - for in","date":"2017-01-18T08:32:12.000Z","path":"2017/01/18/2017-01-18/","text":"官方for..in 语句用于对数组或者对象的属性进行循环操作。循环中的代码每执行一次，就会对数组的元素或者对象的属性进行一次操作。 注意如果为Array的原型链添加属性方法的话，该属性方法会执行一次。如果遍历的数组内存储的不是Object 尽量别用for..in","tags":[]},{"title":"细节注意（一） - 浏览器缓存","date":"2017-01-12T11:58:26.000Z","path":"2017/01/12/2017-01-12/","text":"操作localStorage、sessionStorage对于前端开发工程师操作浏览器缓存很普遍，本文主要介绍操作localStorage和sessionStorage需要哪些注意。要注意localStorage和sessionStorage是key, value存储，而key和value只能为String。所以当你存储Object或者Array时，一定要转化为String。 1localStorage.setItem('arr', [1, 2, 3]); 这样操作后，你所存的arr会是 1,2,3; 正确的方式：1localStorage.setItem('arr', JSON.stringify([1, 2, 3])); 这样操作后，你所存的arr会是[1,2,3]; 而获取时要想获得数组的话，需要1JSON.parse(localStorage.getItem('arr')); 同理操作Object也是需要这样操作。 最最要注意的是如果你要set一个Number，取出来的时候要进行转化，否则运算是该值为String可能会导致你的程序计算不对。","tags":[]},{"title":"vue-cli与node6.x、win10x64的不兼容","date":"2016-12-29T11:32:10.000Z","path":"2016/12/29/2016-12-29/","text":"在很久之前，自己搭建了一套vue框架。运用了vuex、vue-router、vue-resource 等等的一套比较完成的Demo。最近无意间升级了node^6.2.0、公司的电脑系统为win10 x64,然后整个vue都启动不了了。而同样的环境 mac是可以的。很是费解。 提示的错误是不识别es6。找了一天走了很多弯路，以为是webpack问题、babel问题。其实都不是。 最后找到了一个人这么说：The vuejs-templates/webpack seems to have problems with Node ^6.0.0 running on Windows 10 x64, something with Babel not transpiling JavaScript files before the Webpack build. I filled an issue in the repo, hope it gets fixed soom to come back to the latest Node release. 我便把node升级到7。可以了。","tags":[]},{"title":"数组去重装X法","date":"2016-12-23T08:38:52.000Z","path":"2016/12/23/2016-12-23/","text":"不少公司招聘web前端时，免不了需要让面试者做题。本片主要讲一下当遇到数组去重的问题时，怎样让考官一瞬间懵逼。 一、for循环依次进行筛选这个网上太多了，随便搜搜就找到一大堆。 二、用filter特性123456789function removeRepeat(arr)&#123; return arr.filter(function(elem, pos) &#123; return arr.indexOf(elem) == pos; &#125;);&#125;var arr = new Array(\"1\",\"2\",\"3\",\"4\",\"4\",\"4\",\"4\",\"5\");var newArr = removeRepeat(arr);console.log(newArr); 利用filter特性达到数组去重。 三、装X让面试官暂时懵逼的方法1234var arr = [1,2,2,3,4,1,4,2],str = ''; var result = (function unique(num, arr, str) &#123; return arr.length &gt; 0 ? unique(arr.shift(), arr, str.indexOf(num) == -1 ? str += num : str) : str.split(''); &#125;)(arr.shift(), arr, str); 简单介绍一下思路，该方法是用回调和Array.shift()代替for循环，用三目代替if，增加严谨的逻辑，让人一时琢磨不透。总体思路每次获得数组的第一位元素，判断str内是否存在，如果存在继续回调，如果不存在插入，直到数组没有元素。面试官很大可能会让你讲解这段代码，你的装X时间开始了…. 如果同学们有更好的方法 可以发送邮件到 fighterdiwen@163.com 咱们一起进行交流。","tags":[]},{"title":"Hello World","date":"2016-12-23T08:36:02.000Z","path":"2016/12/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]