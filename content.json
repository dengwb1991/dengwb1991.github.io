[{"title":"活着-读后感","date":"2019-02-24T12:03:53.000Z","path":"2019/02/24/Lifetimes-living/","text":"中国过去六十年所发生的一切灾难，都一一发生在福贵和他的家庭身上。接踵而至的打击或许令读者无从同情，但余华至真至诚的笔墨，已将福贵塑造成了一个存在的英雄。当这部沉重的小说结束时，活着的意志，是福贵身上唯一不能被剥夺走的东西。 老人最后对牛说的话：“今天有庆、二喜耕了一亩，家珍、凤霞耕了也有七八分田，苦根还小都耕了半亩。你嘛，耕了多少我就不说了，说出来你会觉得我是要羞你。话还得说回来，你年纪大了，能耕这么些田也尽心尽力了。” 徐家从有鸡变成鹅、鹅变成羊、羊变成牛，苦根死前和富贵有个约定，养一头牛。最后剩下一个老人和一头老牛。","tags":[]},{"title":"硅谷起源（一）","date":"2019-02-23T15:02:13.000Z","path":"2019/02/23/Silicon-valley-origins-1/","text":"（前言）二十世纪50年代初，人们以电子信息业的突破为基础，包括信息、生物工程、新材料、海洋、空间五大技术领域，还有晶体管和大规模集成电路的发明，极大得到克服信息传播的成本。其结果是：人类社会从工业时代进入了信息时代。 说起信息时代，其实是整个社会数字化的过程，而这一切要靠以硅为核心的半导体技术。其中贡献最大的人物当属半导体晶体管的发明人-威廉·肖克利。 （肖克利）肖克利出生在英国，1940年，肖克利和同事在贝尔实验室发明了晶体管。之后不久，因为家庭的原因（据说要给妈妈养老），离开了贝尔实验室来到了旧金山湾区，也就是今天的硅谷地区，并且在朋友的帮助下，创办了自己的半导体公司，生产晶体管。 当然，做这件事光靠他一个人是不够的，他需要招一批有能力的人。当时，晶体管刚被发现，美国大学里当然不会有人教授晶体管的原理，而这个新的器件也没有量产，因此全世界也没有什么人知道该如何制造晶体管。如果按照今天很多公司专业对口的要求，那肖克利是招不到人的，不过他有自己的办法。- 具体办法有两个。首先，他到当时各种学术会议上去听博士生们做报告，通过他们做报告的水平判定他们的研究能力，然后主动联系那些他看得上的人。诺伊斯和摩尔就这么被找到到的。他俩就是当今大名鼎鼎Inter公司的创始人。摩尔定律就是由戈登·摩尔提出来的，这一定律揭示了信息技术进步的速度。 （罗伯特·诺伊斯）诺伊斯出生在美国中西部衣阿华州的一个小镇。从小对大自然有着极大的好奇心，并且把大量的时间花在做实验上，1940年，年仅14岁的诺伊斯和16岁的哥哥盖洛德制作了一架滑翔机。诺伊斯家里并不富裕，因此大学只上了当地的格林奈尔学院。但诺伊斯极为聪明。大学毕业后，他本想去当飞行员，因视力不合格，只好去了麻省理工学院读物理博士。 从MIT获得物理博士学位后，喜欢动手的诺伊斯决定选择在工业界发展。当时他拿到了美国所有顶级研究所的offer，其中包括大家熟知的IBM、贝尔实验室，RCA实验室。 不过他却去了一家不大的费尔科公司（Philco），因此看出他是一个宁为鸡首不为牛后的人。费尔科公司请他去筹办半导体研究部门。不过公司经营不善，这让诺伊斯非常尴尬。 这时他接到了一生中最重要的电话 –他后来回忆得：接到电话的感觉，就像接到了上帝打来的电话一样。电话是肖克利打来的，邀请诺伊斯到加州加盟他刚成立的晶体管公司。诺伊斯毫不犹豫地答应了，并成为公司的第一位员工。 （戈登·摩尔）戈登摩尔加盟的过程和诺伊斯相似。当时他正在约翰·霍普金斯大学做物理学的博士后，虽然研究成果显著，但是他对自己研究的课题是否有用，自己都不确定。他说，政府给了钱搞研究，写论文，算下来成本是每个字5美元，当时5刀很值钱。 而就在他疑惑之际，肖克利打来了电话，于是摩尔接收了邀请。 光靠这样一个个地去接触候选人非常的慢，肖克利想到了一个吸引聪明年轻人主动上门的办法。他将招聘广告以代码的形式刊登到学术周刊上，一般人根本读不懂他的广告，当然那些有比较好的基础又绝顶聪明的人是读得懂的，于是根据那个广告找到他的人至少就过了智力这一关， 2004年，Google学习了肖克利的做法，在硅谷地区101号高速公路旁打了这样的一个广告，无理数e中构成素数的前十位数字.com{first 10-digit prime found in consecutive digits e}.com. 7427466391.com, 打开就跳转到Google的招聘网站。 （公司成立）1956年，肖克利顺利地在旧金山湾区创立了他的公司，公司八个人分别是罗伯特·诺伊斯（Robert Noyce）、戈登·摩尔（Gordon Moore）、朱利亚斯·布兰克（Julius Blank）、尤金·克莱尔（Eugene Kleiner）、金·赫尔尼（Jean Hoerni）、杰·拉斯特（Jay Last）、谢尔顿·罗伯茨（Sheldon Roberts）和维克多·格里尼克（Victor Grinich）。八个人年龄都在30岁以下。这一年年底肖克利和巴丁、布莱顿一起荣获诺贝尔物理奖。这使得新成立的小公司名声大振。 招聘来的年轻人没有做过半导体怎么办呢？没有关系，肖克利认为只要人聪明，会搞研究，可以很快的教会他们做半导体。事实证明肖克利得到想法是正确的的，他所找来的诺伊斯和摩尔后来创办了今天世界最大的半导体公司Inter。此外诺伊斯后来发明了集成电路，摩尔提出了摩尔定律。其他几个人后来都成了世界半导体颤音早期的先驱人物和成功的企业家。 不过，肖克利自己并没有借助他所培养出来的精英获得商业上的成功，因为这些年轻人不久之后全都走了，这就要说肖克利自身的缺陷了。 （叛逃）肖克利是一位极有天赋的科学家，但是他非常的傲慢专横。在贝尔实验室工作的时候，大家就反应和他比较难合作，但是那时他还只是一个普通的研究人员，权利不大。等到他管理公司，得了诺贝尔奖之后，就变得唯我独尊了。 事实证明，他既不是好的领导，也没有商业远见。下面人建议研究集成电路，但是被肖克利拒绝了。他将努力方向放在了降低晶体管成本，而不是研制新技术上，这让他最终起了个大早，却赶了个晚集。 因此，公司创办的第二年，里面的八个年轻人就忍受不了他的独裁作风，集体叛逃，这就是IT历史上的八叛徒事件。 叛徒这个词是肖克利起的，不过由于这八个人后来开创了全世界的半导体产业，并且催生出硅谷，因此叛徒一词后来在硅谷是褒义词，而非贬义词。 （总结）肖克利强调智力和研究能力的重要性，而不太看重年前人的专业背景。这到很想中国一句俗话：英雄不问出处。特别是从事那些前人没有做过的工作，也不可能有太多专业积累，聪明好学的人后劲就比较强。这个道理特别适合在招聘人才上。 因为肖克利不善于管理，他招聘人才的做法并没有给他带来什么好处，因此，在管理团队时仅仅发现人才还不够，还要使用好人才。不过在硅谷，大家都感谢肖克利糟糕的管理水平，因为这反而使得整个旧金山湾区受益，让半导体产业兴起。因此人们说，在信息时代，坏的管理是特点，而不是缺点。","tags":[]},{"title":"How Google Works-读后感","date":"2018-12-08T07:33:49.000Z","path":"2018/12/08/How-google-works/","text":"聚焦用户、创意精英、技术洞见 金句 1、通用电气公司前首席执行官杰克·韦尔奇在《赢》一书中写道： 如果你不能时常传达你的目标，不能通过奖励巩固你的目标，那么，你的愿景还不如打印愿景的纸有价值。 2、苹果前人力资源主管黛比·碧昂多利洛： 你的头衔可以让你成为管理者，但是让你成为领导者的，是你的员工。 3、大型企业成功的方式： 1）使用创新的方式解决问题 2）利用这个解决方式快速成长与扩张 3）成功很大程度上是以产品为基础 4、我没有什么特殊天赋，只是抱有狂热的好奇心 —爱因斯坦","tags":[]},{"title":"程序员的自我修养-读后感","date":"2018-10-15T11:11:21.000Z","path":"2018/10/15/Programmer-s-self-cultivation/","text":"程序员的10点启示 1、尽早确定你想做的事情尽早确定你想做的事情，减少走弯路，往往程序员工作数年后，转行的成本会非常高，虽然有个别成功的案例，但这也只是极少数，制定你的职业目标，并持续努力地接近并达到这个目标。 2、比一般人更加努力 10 000小时定律 优秀的程序员往往会被带上天才、高智商的标签，但是这些优秀的人往往在你看不到的时候，会花更多的时间去工作或者学习，当你也坚持这么做的时候，你也会变得一样优秀。 一万小时定律是作家格拉德威尔在《异类 不一样的成功启示录》一书中指出的定律。“人们眼中的天才之所以卓越非凡，并非天资超人一等，而是付出了持续不断的努力。1万小时的锤炼是任何人从平凡变成世界级大师的必要条件。”他将此称为“一万小时定律”。要成为某个领域的专家，需要10000小时，按比例计算就是：如果每天工作八个小时，一周工作五天，那么成为一个领域的专家至少需要五年。这就是一万小时定律。 3、提高工作效率 加快工作节奏 使用已有的轮子 在工作中，常见两种人，在分配同等的工作量给他们时，一种人会拖到很晚，时长会加班再做完，另一个种人，每天工作8小时整点下班。两人都会按期限完成工作，那么这两种人哪一种会受到领导的青睐，或许前者在领导眼里会是一个好员工，但是后者的潜力更大，值得培养。 4、有效的沟通方式解决这些问题的根本方法，就是进行有效的沟通，确认对方明白了你的意思，然后确认对方是答应你了，还是拒绝你了，不论什么结果，你总要有结论，到此，通信才算结束。 既然沟通要以对方了解你的意思为目的，那么在表达自己的意思时，就需要在你和对方共同认知的基础上讨论那些问题，或者说，要用对方能听得懂，马上理解的语言进行讨论。 与人有效沟通，重点不在于证明自己正确，而在于达到沟通的目的。很多人善于辩论，当时似乎讲得对方无话可说，甚至接受了他们的观点，但是事后别人一想，觉得好像被忽悠了，反而产生了很大的逆反心理。这种看似成功的沟通，其实是彻底的失败。很多时候有的人觉得，明明当时已经说服了对方，怎么没过多久对方就改变主意了。其实，根本不是对方改变主意了，而是他们从来就没有被说服过。在说服别人方面，花言巧语和雄辩的口才，永远比不过确定的事实。 5、PKSS与持续学习大多数公司在年终对员工进行考评时，都是以结果为导向，量化数据，并加以横向比对。怎样提高自己的竞争力？ PKSS（PK saturday and Sunday）爱因斯坦曾说过：人的差别在于业余时间都做了什么。现今社会企业选人要求T型人才，也就是说要求你有一技之长，而且在其他能力也要突出。具美国新华社统计报道：未来的程序员只会一种编程语言是不够的。 6、学会控制情绪大多数人都能比较理性地完成工作，但有时情绪控制能力有所欠缺，具体表现包括主观、随性、情绪变化大，这往往会对个人的职业发展造成损害，甚至是灾难。如何控制好情绪：1、思考发脾气可不可以解决当前的问题，如果不能那就不要。2、站在对方的角度和立场看待问题，就是我们常说的换位思考。3、要主动说对不起 成功人士往往能够控制好自己的情绪，会与身边的人保持良好的关系 7、和优秀的人工作，让身边的人更优秀一个优秀的产品背后，肯定会有一个优秀的团队，而不是优秀的个体，如何成为一个优秀的人？ 当你步入职场、会遇到形形色色的人，能力有高有低。优秀的人身上往往会有你值得学习的地方。比如你们团队的leader、团队中资深的程序员，要勇于把自己的缺点不足暴露出来，让更优秀的人帮助你成长。 8、善于归纳与表达一般给程序员这个职业的标签是技术宅、内心、不乐于沟通。随着自身技能和工作经验的提升，你在公司中很可能会被赋予更多的管理职责，或者担任项目的owner。这时归纳和表达能力将显的非常重要。如何提升表达能力 在需求会、或者私下技术沟通要敢于发言，阐述自己的观点，不要怕说错。给自己创造机会去练习，比如主持周会或者做一次团队的分享会。 在团队或部门建立自己的权威，选择合适的时机去表现自己，这能让其他人看到你的不同之处，在公司、团队内部建立良好的影响力。这里有一个前提，就是你已经积累了足够的实力，做好了充足的准备，并在机会来的时候抓住它。 9、掌握英语掌握好英语能够帮祝你获得更宽广的视野，带来更多的机会，英语作为一项必备技能是非常重要的。 10、生活 睡眠 旅行生活：尝试有节制有规律的生活，程序员生涯绝不是一次冲刺跑，而是一场马拉松。不要忽视你的家庭。睡眠：长时间睡眠不充足，会让人的产生焦虑。充足的睡眠往往能使你更有效率地投入到新一天的工作中。旅行：读万卷书不如行万里路。","tags":[]},{"title":"事件捕获与事件冒泡","date":"2017-02-09T03:44:35.000Z","path":"2017/02/09/2017-02-09/","text":"前言这里首先要先讲一下什么是事件、事件流：事件：浏览器执行的动作，如click、load等。事件流：事件发生时会在元素节点与根节点之间按照特定的顺序传播，路径所经过的所有节点都会收到该事件，这个传播过程即DOM事件流。 正文123&lt;div id=\"outer\"&gt; &lt;div id=\"inner\"&gt;Click me!&lt;/div&gt;&lt;/div&gt; 上面代码中，如果两个元素都绑定了click事件，当点击后函数会怎样触发呢？ 为了解决这个问题微软和网景提出了两种几乎完全相反的概念，事件冒泡、事件捕获。 事件冒泡：事件会从最内层的元素开始发生，一直向上传播，直到document对象。div -&gt; body -&gt; html -&gt; document 事件捕获：事件冒泡相反，事件会从最外层开始发生，直到最具体的元素。document -&gt; html -&gt; body -&gt; div addEventListener为了更清楚的理解事件捕获与事件冒泡，进一步了解addEventListener方法。addEventListener方法用来为一个特定的元素绑定一个事件处理函数，是JavaScript中的常用方法。addEventListener有三个参数：1element.addEventListener(event, function, useCapture) event：字符串，指定事件名，如click、blur等。function：指定事件触发时执行的函数。useCapture: 可选，Boolean，指定事件是否在捕获或冒泡阶段执行，true-事件句柄在捕获阶段执行，false-默认，事件句柄在冒泡阶段执行。 测试1234567891011this.$outerDiv = document.getElementById('outerDiv');this.$innerDiv = document.getElementById('innerDiv');this.$outerDiv.addEventListener('click', () =&gt; &#123; alert('I am outer div');&#125;, true);this.$innerDiv.addEventListener('click', () =&gt; &#123; alert('I am inner div');&#125;, true);&lt;div id=\"outer\"&gt; &lt;div id=\"inner\"&gt;Click me!&lt;/div&gt;&lt;/div&gt; useCapture为true，事件句柄在捕获阶段执行，所以alert顺序为 I am outer div , I am inner div。如果useCapture为false，事件句柄在冒泡阶段执行，顺序与上方相反。实践操作 如果想终止捕获或冒泡。添加event.stopPropagation()方法。","tags":[]},{"title":"细节注意（二） - for in","date":"2017-01-18T08:32:12.000Z","path":"2017/01/18/2017-01-18/","text":"官方for..in 语句用于对数组或者对象的属性进行循环操作。循环中的代码每执行一次，就会对数组的元素或者对象的属性进行一次操作。 注意如果为Array的原型链添加属性方法的话，该属性方法会执行一次。如果遍历的数组内存储的不是Object 尽量别用for..in","tags":[]},{"title":"细节注意（一） - 浏览器缓存","date":"2017-01-12T11:58:26.000Z","path":"2017/01/12/2017-01-12/","text":"操作localStorage、sessionStorage对于前端开发工程师操作浏览器缓存很普遍，本文主要介绍操作localStorage和sessionStorage需要哪些注意。要注意localStorage和sessionStorage是key, value存储，而key和value只能为String。所以当你存储Object或者Array时，一定要转化为String。 1localStorage.setItem('arr', [1, 2, 3]); 这样操作后，你所存的arr会是 1,2,3; 正确的方式：1localStorage.setItem('arr', JSON.stringify([1, 2, 3])); 这样操作后，你所存的arr会是[1,2,3]; 而获取时要想获得数组的话，需要1JSON.parse(localStorage.getItem('arr')); 同理操作Object也是需要这样操作。 最最要注意的是如果你要set一个Number，取出来的时候要进行转化，否则运算是该值为String可能会导致你的程序计算不对。","tags":[]},{"title":"vue-cli与node6.x、win10x64的不兼容","date":"2016-12-29T11:32:10.000Z","path":"2016/12/29/2016-12-29/","text":"在很久之前，自己搭建了一套vue框架。运用了vuex、vue-router、vue-resource 等等的一套比较完成的Demo。最近无意间升级了node^6.2.0、公司的电脑系统为win10 x64,然后整个vue都启动不了了。而同样的环境 mac是可以的。很是费解。 提示的错误是不识别es6。找了一天走了很多弯路，以为是webpack问题、babel问题。其实都不是。 最后找到了一个人这么说：The vuejs-templates/webpack seems to have problems with Node ^6.0.0 running on Windows 10 x64, something with Babel not transpiling JavaScript files before the Webpack build. I filled an issue in the repo, hope it gets fixed soom to come back to the latest Node release. 我便把node升级到7。可以了。","tags":[]},{"title":"数组去重装X法","date":"2016-12-23T08:38:52.000Z","path":"2016/12/23/2016-12-23/","text":"不少公司招聘web前端时，免不了需要让面试者做题。本片主要讲一下当遇到数组去重的问题时，怎样让考官一瞬间懵逼。 一、for循环依次进行筛选这个网上太多了，随便搜搜就找到一大堆。 二、用filter特性123456789function removeRepeat(arr)&#123; return arr.filter(function(elem, pos) &#123; return arr.indexOf(elem) == pos; &#125;);&#125;var arr = new Array(\"1\",\"2\",\"3\",\"4\",\"4\",\"4\",\"4\",\"5\");var newArr = removeRepeat(arr);console.log(newArr); 利用filter特性达到数组去重。 三、装X让面试官暂时懵逼的方法1234var arr = [1,2,2,3,4,1,4,2],str = ''; var result = (function unique(num, arr, str) &#123; return arr.length &gt; 0 ? unique(arr.shift(), arr, str.indexOf(num) == -1 ? str += num : str) : str.split(''); &#125;)(arr.shift(), arr, str); 简单介绍一下思路，该方法是用回调和Array.shift()代替for循环，用三目代替if，增加严谨的逻辑，让人一时琢磨不透。总体思路每次获得数组的第一位元素，判断str内是否存在，如果存在继续回调，如果不存在插入，直到数组没有元素。面试官很大可能会让你讲解这段代码，你的装X时间开始了…. 如果同学们有更好的方法 可以发送邮件到 fighterdiwen@163.com 咱们一起进行交流。","tags":[]},{"title":"Hello World","date":"2016-12-23T08:36:02.000Z","path":"2016/12/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]